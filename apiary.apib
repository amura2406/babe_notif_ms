FORMAT: 1A
HOST: http://localhost/notif/v1/

# babe-notif-ms

The Notification Service objective is to provide single interface to perform push notification both on Android via GCM and also iOS via APNS.

It has to manage background processes which send the __push data__ asynchronously.

This service **SHOULD** limit itself of the number of async task alive concurrently to avoid the service to be unresponsive or even worse it stop working.

# Group Android Push 

## GCM Based Push [/gcm/broadcast]

### Push Notification via GCM [POST]

Add new **push request** through the async task manager. If the nuymber of concurrent async task is available then return HTTP 204 and assign this message to dedicated async thread.
Otherwise return HTTP 503 and specify `Retry-After` header in seconds.

Recipients will be sent in batches every maximum **1000** items. Every batch will be assigned a dedicated thread.

**NB** content of the message is a string and this service **WILL NOT** parse or process it, it simply being sent to GCM.

To handle `GCM Result` which usually contain **GCM to be updated** and  **GCM to be deleted**, this microservice will then push the event to MQ Queue `gcm_update_q` & `gcm_remove_q` respectively.

#### `GCM to be Updated` message format
  
    {
      "oldGcmId": "xxx",
      "newGcmId": "yyy"
    }

#### `GCM to be Deleted` message format

    {
      "gcmId": "xxx"
    }

+ Request (application/json)
    + Attributes
        + appId: 1 (number, required) - App ID of the caller. If not recognized by this service, will be rejected.
        + recipients: `bk3RNwTe3H0:CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1`, `k98RNwTe3H0:CK2k_MNwgIpoDKCIZvvDMExUdFQLG1` (array[string], required) - List of GCM Id to be sent.
        + content: `\{ \"msgtype\":0 etc .......\}` (string, required) - The content/message to be sent to recipients.

+ Response 204

+ Response 400 (application/json)
    Return when parameters requirement not met correctly
    
    + Attributes (DefaultError400)
        
+ Response 404 (application/json)
    Return when App ID is not recognized
    
    + Attributes (DefaultError404)
    
+ Response 413 (application/json)
    Return when request data is too big (limit configurable)
    
    + Attributes (DefaultError413)

+ Response 503 (application/json)
    Return when all available async task slot is out.
    
    + Headers
                
                Retry-After: 120
        

    + Attributes (DefaultError503)

# Group Admin Control

## Status [/task/status]

### Get Async Task Detail [GET]

Return the status of current running async task along with their progress.

+ Response 200 (application/json)
    + Attributes (array[TaskStatusModel])

+ Response 503 (application/json)
    Return when server has internal error and can't continue fulfilling the request
            
    + Attributes (DefaultError503)

# Data Structures

## TaskStatusModel
+ job: `job-name-1` (string) - Job name
+ current: 11000 (number) - Current number of recipients already sent
+ total: 20000 (number) - Total number of recipients
+ failure: 12 (number) - Total failure number
+ appId: 1 (number) - App ID of the caller
+ content: `\{ \"msgtype\":0 etc .......\}` (string) - The content/message to be sent to recipients.

## Error (object)
+ errCode (number) - Error Code
+ errMsg (string) - Error Message

## DefaultError400 (Error)
+ errCode: `-1`
+ errMsg: Invalid Request

## DefaultError401 (Error)
+ errCode: `-2`
+ errMsg: Authorization needed to access resource

## DefaultError404 (Error)
+ errCode: `-5`
+ errMsg: Resource not found

## DefaultError413 (Error)
+ errCode: `-14`
+ errMsg: Request Entity Too Large

## DefaultError503 (Error)
+ errCode: `-10`
+ errMsg: Backend service is down